/*
Copyright (c) 2022 Guzman Zugnoni <gooseiman@protonmail.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
 */
package frontend;

import backend.ClientList;
import static backend.Main.buyOrders;
import static backend.Main.clients;
import static backend.Main.sales;
import java.text.SimpleDateFormat;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chonk
 */
public class ManageClients extends javax.swing.JPanel {

    private final JFrame window;

    /**
     * Creates new form ManageClients
     */
    public ManageClients(JFrame window) {
        initComponents();
        this.window = window;
        filtered = null;
        this.drawTable(DrawType.Both);
    }

    private void drawTable(DrawType t) {
        var node = (filtered == null ? clients : filtered).getFirst();
        DefaultTableModel model = (DefaultTableModel) clientsTable.getModel();
        model.setRowCount(0);
        var formatter = new SimpleDateFormat("E d/M/y");

        while (node != null) {
            var client = node.getData();

            if (t == DrawType.Sales || t == DrawType.Both) {
                var s = sales.getSalesByClient(client);
                var temps = s.getFirst();
                while (temps != null) {
                    Object[] curr = new Object[5];
                    var sale = temps.getData();
                    curr[0] = "Sale";
                    curr[1] = client.getName();
                    curr[2] = sale.getOrders().accumulatePrice();
                    curr[3] = sale.getOrders().accumulateStock();
                    curr[4] = formatter.format(sale.getDate());
                    model.addRow(curr);
                    temps = temps.getNext();
                }
            }

            if (t == DrawType.BuyOrders || t == DrawType.Both) {
                var b = buyOrders.getOrdersByClient(client);
                var tempb = b.getFirst();
                while (tempb != null) {
                    Object[] curr = new Object[5];
                    var buyOrder = tempb.getData();
                    curr[0] = "Buy Order";
                    curr[1] = client.getName();
                    curr[2] = buyOrder.getOrders().accumulatePrice();
                    curr[3] = buyOrder.getOrders().accumulateStock();
                    curr[4] = formatter.format(buyOrder.getDate());
                    model.addRow(curr);
                    tempb = tempb.getNext();
                }
            }
            node = node.getNext();
        }

        clientsTable.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inclusionButtonGroup = new javax.swing.ButtonGroup();
        titleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientsTable = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        markAsSaleButton = new javax.swing.JButton();
        searchLabel = new javax.swing.JLabel();
        searchTypeComboBox = new javax.swing.JComboBox<>();
        includeLabel = new javax.swing.JLabel();
        salesRadioButton = new javax.swing.JRadioButton();
        bothRadioButton = new javax.swing.JRadioButton();
        searchTextField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        buyOrderRadioButton1 = new javax.swing.JRadioButton();

        setPreferredSize(new java.awt.Dimension(700, 500));

        titleLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Manage Clients");
        titleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        clientsTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        clientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Type", "Client Name", "Total Price", "Number Ordered", "Date Ordered"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(clientsTable);

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        markAsSaleButton.setText("Mark as Sold");
        markAsSaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                markAsSaleButtonActionPerformed(evt);
            }
        });

        searchLabel.setText("Search by:");

        searchTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Minimum price", "Maximum price", "Maximum ordered", "Minimum ordered"}));
        searchTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTypeComboBoxActionPerformed(evt);
            }
        });

        includeLabel.setText("Include:");

        inclusionButtonGroup.add(salesRadioButton);
        salesRadioButton.setText("Sales");
        salesRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesRadioButtonActionPerformed(evt);
            }
        });

        inclusionButtonGroup.add(bothRadioButton);
        bothRadioButton.setText("Both");
        bothRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bothRadioButtonActionPerformed(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        inclusionButtonGroup.add(buyOrderRadioButton1);
        buyOrderRadioButton1.setText("Buy Orders");
        buyOrderRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyOrderRadioButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(backButton)
                        .addGap(127, 127, 127)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(searchTextField))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(includeLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(salesRadioButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(buyOrderRadioButton1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(bothRadioButton)
                            .addGap(27, 27, 27)
                            .addComponent(markAsSaleButton))))
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(includeLabel)
                    .addComponent(salesRadioButton)
                    .addComponent(buyOrderRadioButton1)
                    .addComponent(bothRadioButton)
                    .addComponent(markAsSaleButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(37, 37, 37))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // Delete currently selected window
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.window.setContentPane(new MainMenu(window));
        this.window.pack();
    }//GEN-LAST:event_backButtonActionPerformed

    private void markAsSaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_markAsSaleButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_markAsSaleButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        this.window.setContentPane(new AddClient(window));
        this.window.pack();
    }//GEN-LAST:event_addButtonActionPerformed

    private void buyOrderRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyOrderRadioButton1ActionPerformed
        this.drawTable(DrawType.BuyOrders);
    }//GEN-LAST:event_buyOrderRadioButton1ActionPerformed

    private void searchTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTypeComboBoxActionPerformed

    private void salesRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesRadioButtonActionPerformed
        this.drawTable(DrawType.Sales);
    }//GEN-LAST:event_salesRadioButtonActionPerformed

    private void bothRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bothRadioButtonActionPerformed
        this.drawTable(DrawType.Both);
    }//GEN-LAST:event_bothRadioButtonActionPerformed

    enum DrawType {
        BuyOrders,
        Sales,
        Both,
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JRadioButton bothRadioButton;
    private javax.swing.JRadioButton buyOrderRadioButton1;
    private javax.swing.JTable clientsTable;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel includeLabel;
    private javax.swing.ButtonGroup inclusionButtonGroup;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton markAsSaleButton;
    private javax.swing.JRadioButton salesRadioButton;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JComboBox<String> searchTypeComboBox;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    // Wrong
    private ClientList filtered;
    private int[] ids = new int[clients.size()];
    // Actual end of variable declaration
}
